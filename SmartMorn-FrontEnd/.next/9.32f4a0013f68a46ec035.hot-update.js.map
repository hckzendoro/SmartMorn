{"version":3,"file":"9.32f4a0013f68a46ec035.hot-update.js","sources":["webpack:///pages/register.js","webpack:///redux/reducers/auth.js"],"sourcesContent":["import React,{ Component } from 'react';\nimport styled, { injectGlobal } from 'styled-components';\nimport Layout from '../components/Layout.js';\nimport Link from '../utils/helper/Link';\nimport { actions as auth  } from '../redux/reducers/auth'\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from 'redux';\nimport {\n    Form,\n    FormGroup,\n    Label,\n    Input,\n    Row,\n    Col,\n    Button,\n    Card,\n    CardBody,\n    ButtonGroup,\n    Alert\n} from 'reactstrap';\n\nconst MarginTop = styled.div`\n    margin-top: 5vh;\n`;\nconst MarginLink = styled.div`\n    margin-top: 10px;\n`;\nconst MarginBottom = styled.div`\n    margin-bottom: 40px;\n`;\nconst FormWithMargin = styled(Form) `\n    margin-top: 16px;\n`;\nclass Register extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            username: '',\n            password: '',\n            confirmPassword: '',\n            birthday: '',\n            gender: 'Male',\n        }\n    }\n    \n    register = () => (e)  => {\n        e.preventDefault();\n        this.props.register(this.state);\n        console.log(this.state);\n    }\n    handleChange = (field) => (e) => {\n        this.setState({\n            [field]: e.target.value\n        })\n    }\n\trender() {\n        console.log(this.props)\n\t\treturn (\n\t\t<Layout title=\"SmartMorn V1 - Register\" Navbar=\"false\">\n            <MarginTop>\n                <Row>\n                    <Col md=\"3\" md={{ size: 4, offset: 4 }}>\n                        <MarginBottom>\n                            <center>\n                                <img src=\"static/images/smartmornlogo.png\" width=\"300\"/>\n                            </center>\n                        </MarginBottom>\n                        <Card>\n                            <CardBody>\n                                { this.props.errorMessage && \n                                    <Alert color=\"danger\">\n                                        {this.props.errorMessage}\n                                    </Alert>\n                                }\n                                <FormWithMargin method=\"post\" onSubmit={this.register()}>\n                                    <FormGroup>\n                                        <Label for=\"username\">Username</Label>\n                                        <Input type=\"text\" name=\"username\" id=\"username\" placeholder=\"\" \n                                        onChange={this.handleChange('username')}\n                                        value={this.state.username}\n                                        required=\"true\"/>\n                                    </FormGroup>\n                                    <FormGroup>\n                                        <Label for=\"password\">Password</Label>\n                                        <Input type=\"password\" name=\"username\" id=\"password\" placeholder=\"\" \n                                        onChange={this.handleChange('password')}\n                                        value={this.state.password}\n                                        required=\"true\"/>\n                                    </FormGroup>\n                                    <FormGroup>\n                                        <Label for=\"confirm_password\">Confirm Password</Label>\n                                        <Input type=\"password\" name=\"confirm_password\" id=\"confirm_password\" placeholder=\"\" \n                                        onChange={this.handleChange('confirmPassword')}\n                                        value={this.state.confirmPassword}\n                                        required=\"true\"/>\n                                    </FormGroup>\n                                    <FormGroup>\n                                        <Label for=\"confirm_password\">BirthDay</Label>\n                                        <Input type=\"date\" name=\"birthday\" id=\"birthday\" placeholder=\"\"\n                                         onChange={this.handleChange('birthday')}\n                                         value={this.state.birthday}\n                                        required=\"true\"/>\n                                    </FormGroup>\n                                    <FormGroup>\n                                        <Label for=\"gender\">Gender</Label>\n                                        <Input type=\"select\" name=\"select\" id=\"gender\" \n                                        onChange={this.handleChange('gender')}\n                                        value={this.state.gender}>\n                                            <option>Male</option>\n                                            <option>Female</option>\n                                        </Input>\n                                    </FormGroup>\n                                    <Button className=\"btn-outline-info active\" block><i className=\"icon ion-md-log-in\"></i> Register</Button>\n                                    <MarginLink>\n                                        <div>\n                                            <Link href=\"/login\">\n                                                <a> Back</a>\n                                            </Link>\n                                        </div>\n                                    </MarginLink>\n\n                                </FormWithMargin>\n                            </CardBody>\n                        </Card>\n                    </Col>\n                </Row>\n            </MarginTop>\n\t\t</Layout>\n\t  )\n\t}\n}\nconst mapStateToProps = ({ auth }) => ({\n    isLogin : auth.isLogin,\n    errorMessage: auth.errorMessage\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n    register: bindActionCreators(auth.Register,dispatch)\n})\nexport default connect(mapStateToProps,mapDispatchToProps)(Register);\n\n\n// WEBPACK FOOTER //\n// pages/register.js","import _ from 'lodash';\nimport axios from '../../utils/api';\n\nimport { defineAction } from 'redux-define';\n\nconst App = 'SMARTMORN';\n\nconst ACTION_AUTH_LOGIN = defineAction('AUTH_LOGIN', ['PENDING', 'RESOLVED', 'REJECTED'], App);\nconst ACTION_AUTH_REGISTER = defineAction('AUTH_REGISTER', ['PENDING', 'RESOLVED', 'REJECTED'], App);\nconsole.log(ACTION_AUTH_REGISTER);\nconst initialState = {\n    isLogin: false,\n    loading: false,\n    errorMessage: ''\n};\n\nexport default (state = initialState, action) => {\n    switch (action.type) {\n        case ACTION_AUTH_LOGIN.RESOLVED: \n            return {\n                ...state,\n                isLogin: !state.isLogin,\n                loading: !state.loading\n            };\n        case ACTION_AUTH_LOGIN.PENDING: \n            return {\n                ...state,\n                loading: !state.loading\n            }\n        case ACTION_AUTH_LOGIN.REJECTED: \n            return {\n                ...state,\n                loading: !state.loading,\n                errorMessage: action.payload.message\n            }\n        default: return state;\n    }\n};\n\nexport const actions = {\n    Login: (username, password) => (dispatch)  => {\n        dispatch({\n            type: ACTION_AUTH.PENDING\n        })\n        axios().post('/users/login',{\n            username: username,\n            password: password\n        }).then((resp) => {\n            if(!resp.data.error) {\n                window.localStorage.setItem('SmartMornKey', resp.data.token);\n                return dispatch({ \n                    type: ACTION_AUTH_LOGIN.RESOLVED\n                });\n                \n            } else {\n                return dispatch({ \n                    type: ACTION_AUTH_LOGIN.REJECTED,\n                    payload: {\n                        message: resp.data.message\n                    }\n                });\n            }\n        }).catch((error) => {\n            return dispatch({ \n                type: ACTION_AUTH_LOGIN.REJECTED,\n                payload: {\n                    message: 'Error : cannot connect to api server'\n                }\n            });\n        });\n    }, \n    Register: (state) => (dispatch) => {\n        console.log('register');\n       // if(state.password != state.confirmPassword)\n    }\n};\n\n// Debug \n// export const login = (username,password) => (dispatch) => {\n//     const data = dispatch({\n//         type: 'Login',\n//         payload: {\n//             username: username,\n//             password: password\n//         }\n//     });\n//     console.log(data);\n// }\n\n\n\n\n\n\n\n\n\n\n// WEBPACK FOOTER //\n// redux/reducers/auth.js"],"mappings":"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","sourceRoot":""}