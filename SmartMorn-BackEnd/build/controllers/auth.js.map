{"version":3,"sources":["../../src/controllers/auth.js"],"names":["login","req","res","username","body","password","returnData","length","token","jwt","sign","userID","id","expiresIn","json","error","message","register","gender","birthDay","birthday","returnCheckExist"],"mappings":";;;;;;;AAAA;;;;AACA;;;;AACA;;;;;;AACO,IAAMA,wBAAQ,SAARA,KAAQ,CAACC,GAAD,EAAKC,GAAL,EAAa;;AAE9B,QAAIC,WAAWF,IAAIG,IAAJ,CAASD,QAAxB;AACA,QAAIE,WAAWJ,IAAIG,IAAJ,CAASC,QAAxB;;AAEA,4BAAG,kEAAH,EAAsE,CAAEF,QAAF,EAAY,kBAAIE,QAAJ,CAAZ,CAAtE,EAAkG,UAACC,UAAD,EAAgB;;AAE9G,YAAGA,WAAWC,MAAX,GAAoB,CAAvB,EAA0B;AACtB,gBAAMC,QAAQC,uBAAIC,IAAJ,CAAS,EAAEC,QAAQL,WAAW,CAAX,EAAcM,EAAxB,EAAT,EAAsC,cAAtC,EAAqD,EAAEC,WAAW,KAAb,EAArD,CAAd;AACAX,gBAAIY,IAAJ,CAAS;AACLC,uBAAO,KADF;AAELC,yBAAS,SAFJ;AAGLR,uBAAOA;AAHF,aAAT;AAKH,SAPD,MAOO;AACHN,gBAAIY,IAAJ,CAAS;AACLC,uBAAO,IADF;AAELC,yBAAS;AAFJ,aAAT;AAIH;AACJ,KAfD;AAgBH,CArBM;;AAuBA,IAAMC,8BAAW,SAAXA,QAAW,CAAChB,GAAD,EAAKC,GAAL,EAAa;AACjC,QAAIC,WAAWF,IAAIG,IAAJ,CAASD,QAAxB;AACA,QAAIE,WAAWJ,IAAIG,IAAJ,CAASC,QAAxB;AACA,QAAIa,SAASjB,IAAIG,IAAJ,CAASc,MAAtB;AACA,QAAIC,WAAWlB,IAAIG,IAAJ,CAASgB,QAAxB;;AAEA,4BAAG,gDAAH,EAAoD,CAAEjB,QAAF,CAApD,EAAiE,UAACkB,gBAAD,EAAsB;AACnF,YAAGA,iBAAiBd,MAAjB,IAA2B,CAA9B,EAAiC;;AAE7B,oCAAG,8BAAH,EAAkC;AAC9BJ,0BAAUA,QADoB;AAE9BE,0BAAU,kBAAIA,QAAJ,CAFoB;AAG9Be,0BAAUD,QAHoB;AAI9BD,wBAAQA;AAJsB,aAAlC,EAKE,UAACH,KAAD,EAAOT,UAAP,EAAsB;AACpBJ,oBAAIY,IAAJ,CAAS;AACLC,2BAAO,KADF;AAELC,6BAAS;AAFJ,iBAAT;AAIH,aAVD;AAWH,SAbD,MAaO;AACHd,gBAAIY,IAAJ,CAAS;AACLC,uBAAO,IADF;AAELC,yBAAS;AAFJ,aAAT;AAIH;AACJ,KApBD;AAqBH,CA3BM","file":"auth.js","sourcesContent":["import jwt from 'jsonwebtoken';\nimport db from '../utils/database';\nimport md5 from 'md5';\nexport const login = (req,res) => {\n\n    let username = req.body.username;\n    let password = req.body.password;\n\n    db('SELECT * FROM `userinfo` WHERE `username` = ? and `password` = ?',[ username, md5(password) ],(returnData) => {\n\n        if(returnData.length > 0) {\n            const token = jwt.sign({ userID: returnData[0].id },'SuperHeroLOL',{ expiresIn: '24h' });\n            res.json({\n                error: false,\n                message: 'success',\n                token: token\n            });\n        } else {\n            res.json({\n                error: true,\n                message: 'Error: Username Or Password Incorrect!'\n            });\n        }\n    });\n}\n\nexport const register = (req,res) => {\n    let username = req.body.username;\n    let password = req.body.password;\n    let gender = req.body.gender;\n    let birthDay = req.body.birthday;\n\n    db('SELECT * FROM `userinfo` WHERE `username` = ? ',[ username ],(returnCheckExist) => {\n        if(returnCheckExist.length == 0) {\n          \n            db(\"INSERT INTO `userinfo` SET ?\",{ \n                username: username, \n                password: md5(password),\n                birthday: birthDay,\n                gender: gender\n            },(error,returnData) => {\n                res.json({\n                    error: false,\n                    message: 'Register Success',\n                });\n            });\n        } else {\n            res.json({\n                error: true,\n                message: 'Error: Username Already Exist!'\n            });\n        }\n    });\n}"]}