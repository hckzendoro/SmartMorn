{"version":3,"file":"9.72ed47d82c5b112a8ba8.hot-update.js","sources":["webpack:///redux/reducers/auth.js"],"sourcesContent":["import _ from 'lodash';\nimport axios from '../../utils/api';\n\nimport { defineAction } from 'redux-define';\n\nconst App = 'SMARTMORN';\n\nconst ACTION_AUTH_LOGIN = defineAction('AUTH_LOGIN', ['PENDING', 'RESOLVED', 'REJECTED'], App);\nconst ACTION_AUTH_REGISTER = defineAction('AUTH_REGISTER', ['PENDING', 'RESOLVED', 'REJECTED'], App);\n\nconst initialState = {\n    isLogin: false,\n    loading: false,\n    errorMessage: ''\n};\n\nexport default (state = initialState, action) => {\n    switch (action.type) {\n        case ACTION_AUTH_LOGIN.RESOLVED: \n            return {\n                ...state,\n                isLogin: !state.isLogin,\n                loading: !state.loading\n            };\n        case ACTION_AUTH_LOGIN.PENDING: \n            return {\n                ...state,\n                loading: !state.loading\n            }\n        case ACTION_AUTH_LOGIN.REJECTED: \n            return {\n                ...state,\n                loading: !state.loading,\n                errorMessage: action.payload.message\n            }\n        default: return state;\n    }\n};\n\nexport const actions = {\n    Login: (username, password) => (dispatch)  => {\n        dispatch({\n            type: ACTION_AUTH.PENDING\n        })\n        axios().post('/users/login',{\n            username: username,\n            password: password\n        }).then((resp) => {\n            if(!resp.data.error) {\n                window.localStorage.setItem('SmartMornKey', resp.data.token);\n                return dispatch({ \n                    type: ACTION_AUTH_LOGIN.RESOLVED\n                });\n                \n            } else {\n                return dispatch({ \n                    type: ACTION_AUTH_LOGIN.REJECTED,\n                    payload: {\n                        message: resp.data.message\n                    }\n                });\n            }\n        }).catch((error) => {\n            return dispatch({ \n                type: ACTION_AUTH_LOGIN.REJECTED,\n                payload: {\n                    message: 'Error : cannot connect to api server'\n                }\n            });\n        });\n    }, \n    Register: (username,password) => (dispatch) => {\n\n    }\n};\n\n// Debug \n// export const login = (username,password) => (dispatch) => {\n//     const data = dispatch({\n//         type: 'Login',\n//         payload: {\n//             username: username,\n//             password: password\n//         }\n//     });\n//     console.log(data);\n// }\n\n\n\n\n\n\n\n\n\n\n// WEBPACK FOOTER //\n// redux/reducers/auth.js"],"mappings":";;;;;;;;;;;;;;;;AAAA;AACA;AAEA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAHA;AAMA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAEA;AACA;AAHA;AACA;AAIA;AACA;AAEA;AAFA;AACA;AAGA;AACA;AAEA;AACA;AAHA;AACA;AAIA;AAAA;AAlBA;AAoBA;AAEA;AACA;AAAA;AACA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AADA;AAIA;AACA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AA9BA;AA+BA;AAAA;AAAA;AAhCA;AAsCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;A","sourceRoot":""}