{"version":3,"file":"1.0ed363b4d751367ebbcf.hot-update.js","sources":["webpack:///redux/reducers/adjustment.js","webpack:///redux/reducers/alarm.js","webpack:///redux/reducers/index.js","webpack:///redux/reducers/sleepSession.js"],"sourcesContent":["import _ from 'lodash';\nimport axios from '../../utils/api';\n\nimport { defineAction } from 'redux-define';\n\nconst App = 'SMARTMORN';\n\nconst ACTION_AUTH_ADJUST = defineAction('AUTH_ADJUST', ['PENDING', 'RESOLVED', 'REJECTED','CLEAR'], App);\nconsole.log(ACTION_AUTH_ADJUST);\n\nconst initialState = {\n    loading: false,\n    error: '',\n    message: ''\n};\n\nexport default (state = initialState, action) => {\n    switch (action.type) {\n        case ACTION_AUTH_ADJUST.RESOLVED: \n            return {\n                ...state,\n                error: false,\n                message: action.payload.message\n            };\n        case ACTION_AUTH_ADJUST.PENDING: \n            return {\n                ...state,\n               \n            }\n        case ACTION_AUTH_ADJUST.REJECTED: \n            return {\n                ...state,\n               \n            }\n        case ACTION_AUTH_ADJUST.CLEAR: \n            return {\n                ...state,\n                message: false\n            }\n        default: return state;\n    }\n};\n\nexport const actions = {\n    turnOn: (state) => (dispatch)  => {\n        dispatch({\n            type: ACTION_AUTH_ADJUST.PENDING\n        })\n        axios().get('/adjustment/on').then((resp) => {\n            if(!resp.data.error) {\n                return dispatch({ \n                    type: ACTION_AUTH_ADJUST.RESOLVED,\n                    payload: {\n                        message: resp.data.message\n                    }\n                });\n                \n            } else {\n                return dispatch({ \n                    type: ACTION_AUTH_ADJUST.REJECTED,\n                    payload: {\n                        message: resp.data.message\n                    }\n                });\n            }\n        }).catch((error) => {\n            return dispatch({ \n                type: ACTION_AUTH_ADJUST.REJECTED,\n                payload: {\n                    message: 'Error : cannot connect to api server'\n                }\n            });\n        });\n    },\n    turnOff: (state) => (dispatch)  => {\n        dispatch({\n            type: ACTION_AUTH_ADJUST.PENDING\n        })\n        axios().get('/adjustment/off').then((resp) => {\n            if(!resp.data.error) {\n                return dispatch({ \n                    type: ACTION_AUTH_ADJUST.RESOLVED,\n                    payload: {\n                        message: resp.data.message\n                    }\n                });\n                \n            } else {\n                return dispatch({ \n                    type: ACTION_AUTH_ADJUST.REJECTED,\n                    payload: {\n                        message: resp.data.message\n                    }\n                });\n            }\n        }).catch((error) => {\n            return dispatch({ \n                type: ACTION_AUTH_ADJUST.REJECTED,\n                payload: {\n                    message: 'Error : cannot connect to api server'\n                }\n            });\n        });\n    },\n    clearMessage: () => (dispatch) => {\n        dispatch({\n            type: ACTION_AUTH_ADJUST.CLEAR\n        })\n    }\n};\n\n\n\n\n\n\n\n\n\n\n\n// WEBPACK FOOTER //\n// redux/reducers/adjustment.js","import _ from 'lodash';\nimport axios from '../../utils/api';\n\nimport { defineAction } from 'redux-define';\n\nconst App = 'SMARTMORN';\n\nconst ACTION_AUTH_ALARM = defineAction('AUTH_ALARM', ['PENDING', 'RESOLVED', 'REJECTED','CLEAR'], App);\nconsole.log(ACTION_AUTH_ALARM);\n\nconst initialState = {\n    loading: false,\n    error: '',\n    message: ''\n};\n\nexport default (state = initialState, action) => {\n    switch (action.type) {\n        case ACTION_AUTH_ALARM.RESOLVED: \n            return {\n                ...state,\n                error: false,\n                message: action.payload.message\n            };\n        case ACTION_AUTH_ALARM.PENDING: \n            return {\n                ...state,\n               \n            }\n        case ACTION_AUTH_ALARM.REJECTED: \n            return {\n                ...state,\n               \n            }\n        case ACTION_AUTH_ALARM.CLEAR: \n            return {\n                ...state,\n                message: false\n            }\n        default: return state;\n    }\n};\n\nexport const actions = {\n    setAlarm: (state) => (dispatch)  => {\n        console.log('work @ redux')\n        dispatch({\n            type: ACTION_AUTH_ALARM.PENDING\n        })\n        axios().post('/users/setalarm',{\n            date: state.date,\n            time: state.time\n        }).then((resp) => {\n            if(!resp.data.error) {\n                dispatch({\n                    type: ACTION_AUTH_ALARM.RESOLVED,\n                    payload: {\n                        message: resp.data.message\n                    }\n                })\n                \n            } else {\n                dispatch({\n                    type: ACTION_AUTH_ALARM.REJECTED,\n                    payload: {\n                        message: resp.data.message\n                    }\n                })\n            }\n        }).catch((error) => {\n            return dispatch({ \n                type: ACTION_AUTH_ALARM.REJECTED,\n                payload: {\n                    message: 'Error : cannot connect to api server'\n                }\n            });\n        });\n    }, \n    clearMessage: () => (dispatch) => {\n        dispatch({\n            type: ACTION_AUTH_ALARM.CLEAR\n        })\n    }\n};\n\n// Debug \n// export const login = (username,password) => (dispatch) => {\n//     const data = dispatch({\n//         type: 'Login',\n//         payload: {\n//             username: username,\n//             password: password\n//         }\n//     });\n//     console.log(data);\n// }\n\n\n\n\n\n\n\n\n\n\n// WEBPACK FOOTER //\n// redux/reducers/alarm.js","import { combineReducers } from 'redux';\nimport auth from './auth';\nimport alarm from './alarm'\nimport sleep from './sleepSession';\nimport dashboard from './dashboard';\nimport adjustment from './adjustment';\nexport default combineReducers({\n    auth,\n    alarm,\n    sleep,\n    dashboard,\n    adjustment\n});\n\n\n\n// WEBPACK FOOTER //\n// redux/reducers/index.js","import _ from 'lodash';\nimport axios from '../../utils/api';\n\nimport { defineAction } from 'redux-define';\n\nconst App = 'SMARTMORN';\n\nconst ACTION_AUTH_SLEEP = defineAction('AUTH_SLEEP', ['PENDING', 'RESOLVED', 'REJECTED','CLEAR'], App);\nconsole.log(ACTION_AUTH_SLEEP);\n\nconst initialState = {\n    loading: false,\n    error: '',\n    message: ''\n};\n\nexport default (state = initialState, action) => {\n    switch (action.type) {\n        case ACTION_AUTH_SLEEP.RESOLVED: \n            return {\n                ...state,\n                error: false,\n                message: action.payload.message\n            };\n        case ACTION_AUTH_SLEEP.PENDING: \n            return {\n                ...state,\n               \n            }\n        case ACTION_AUTH_SLEEP.REJECTED: \n            return {\n                ...state,\n               \n            }\n        case ACTION_AUTH_SLEEP.CLEAR: \n            return {\n                ...state,\n                message: false\n            }\n        default: return state;\n    }\n};\n\nexport const actions = {\n    setSleepSession: (state) => (dispatch)  => {\n        console.log('work @ redux')\n        dispatch({\n            type: ACTION_AUTH_SLEEP.PENDING\n        })\n        axios().post('/users/setsleep',{\n            time: state.sleepTime\n        }).then((resp) => {\n            if(!resp.data.error) {\n                dispatch({\n                    type: ACTION_AUTH_SLEEP.RESOLVED,\n                    payload: {\n                        message: resp.data.message\n                    }\n                })\n                \n            } else {\n                dispatch({\n                    type: ACTION_AUTH_SLEEP.REJECTED,\n                    payload: {\n                        message: resp.data.message\n                    }\n                })\n            }\n        }).catch((error) => {\n            return dispatch({ \n                type: ACTION_AUTH_SLEEP.REJECTED,\n                payload: {\n                    message: 'Error : cannot connect to api server'\n                }\n            });\n        });\n    }, \n    clearMessage: () => (dispatch) => {\n        dispatch({\n            type: ACTION_AUTH_SLEEP.CLEAR\n        })\n    }\n};\n\n// Debug \n// export const login = (username,password) => (dispatch) => {\n//     const data = dispatch({\n//         type: 'Login',\n//         payload: {\n//             username: username,\n//             password: password\n//         }\n//     });\n//     console.log(data);\n// }\n\n\n\n\n\n\n\n\n\n\n// WEBPACK FOOTER //\n// redux/reducers/sleepSession.js"],"mappings":";;;;;;;;;;;;;;;;AAAA;AACA;AAEA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAHA;AAMA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAEA;AACA;AAHA;AACA;AAIA;AACA;AACA;AAGA;AACA;AACA;AAGA;AACA;AAEA;AAFA;AACA;AAGA;AAAA;AAtBA;AAwBA;AAEA;AACA;AAAA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AADA;AAFA;AAOA;AACA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AA7BA;AA8BA;AAAA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AADA;AAFA;AAOA;AACA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AA7BA;AA8BA;AAAA;AACA;AACA;AADA;AAGA;AAJA;AA7DA;;;;;;;;;;;;;;;;;;AC3CA;AACA;AAEA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAHA;AAMA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAEA;AACA;AAHA;AACA;AAIA;AACA;AACA;AAGA;AACA;AACA;AAGA;AACA;AAEA;AAFA;AACA;AAGA;AAAA;AAtBA;AAwBA;AAEA;AACA;AAAA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AADA;AAFA;AAOA;AACA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AAjCA;AAkCA;AAAA;AACA;AACA;AADA;AAGA;AAJA;AAnCA;AA2CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AC/FA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;;;;;;;;;;;;;;;;;;ACNA;AACA;AAEA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAHA;AAMA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAEA;AACA;AAHA;AACA;AAIA;AACA;AACA;AAGA;AACA;AACA;AAGA;AACA;AAEA;AAFA;AACA;AAGA;AAAA;AAtBA;AAwBA;AAEA;AACA;AAAA;AACA;AACA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AADA;AAFA;AAOA;AACA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AAhCA;AAiCA;AAAA;AACA;AACA;AADA;AAGA;AAJA;AAlCA;AA0CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;A","sourceRoot":""}